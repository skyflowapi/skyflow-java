package com.example.serviceaccount;

import com.skyflow.errors.SkyflowException;
import com.skyflow.serviceaccount.util.BearerToken;

import java.io.File;
import java.util.ArrayList;

/**
 * This example demonstrates how to generate a Scoped Bearer Token in two ways:
 * 1. Using a credentials file specified by its file path.
 * 2. Using the credentials as a string.
 * <p>
 * Scoped tokens are generated by assigning specific roles for access control.
 */
public class ScopedTokenGenerationExample {
    public static void main(String[] args) {
        String scopedToken = null; // Variable to store the generated Scoped Bearer Token

        // Example 1: Generate Scoped Token using a credentials file path
        try {
            // Step 1: Specify the roles required for the scoped token
            ArrayList<String> roles = new ArrayList<>();
            roles.add("YOUR_ROLE_ID"); // Replace with your actual role ID

            // Step 2: Specify the path to the credentials file
            String filePath = "<YOUR_CREDENTIALS_FILE_PATH>"; // Replace with the actual file path

            // Step 3: Create a BearerToken object using the file path and roles
            BearerToken bearerToken = BearerToken.builder()
                    .setCredentials(new File(filePath)) // Provide the credentials file
                    .setRoles(roles)                   // Set the roles for the scoped token
                    .build();

            // Step 4: Generate and print the Scoped Bearer Token
            scopedToken = bearerToken.getBearerToken();
            System.out.println("Scoped Token (using file path): " + scopedToken);
        } catch (SkyflowException e) { // Handle exceptions during token generation
            System.out.println("Error occurred while generating Scoped Token using file path:");
            e.printStackTrace();
        }

        // Example 2: Generate Scoped Token using credentials as a string
        try {
            // Step 1: Specify the roles required for the scoped token
            ArrayList<String> roles = new ArrayList<>();
            roles.add("YOUR_ROLE_ID"); // Replace with your actual role ID

            // Step 2: Specify the credentials as a string (file contents)
            String fileContents = "<YOUR_CREDENTIALS_FILE_CONTENTS_AS_STRING>"; // Replace with actual file contents

            // Step 3: Create a BearerToken object using the credentials string and roles
            BearerToken bearerToken = BearerToken.builder()
                    .setCredentials(fileContents) // Provide the credentials as a string
                    .setRoles(roles)             // Set the roles for the scoped token
                    .build();

            // Step 4: Generate and print the Scoped Bearer Token
            scopedToken = bearerToken.getBearerToken();
            System.out.println("Scoped Token (using credentials string): " + scopedToken);
        } catch (SkyflowException e) { // Handle exceptions during token generation
            System.out.println("Error occurred while generating Scoped Token using credentials string:");
            e.printStackTrace();
        }
    }
}
